- name: Add a volume to instance
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/asg_vars.yml
    - vars/aws_template_vars.yml
    - vars/server_setup_vars.yml
  tasks:
    ###>  pull instance information for matching instances, 
    - name: Pull new InstanceID
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        filters:
          instance-state-name: [ "running" ]
          "tag:environment": "{{ new_env }}"
          "tag:product": "{{ product_tag }}"
      register: instance_info

    - name: Show instance information
      ansible.builtin.debug:
        var: instance_info['instances'][0]['instance_id'] 
      ignore_errors: true

    - name: Create Data volume 
      amazon.aws.ec2_vol:
        instance: "{{ instance_info['instances'][0]['instance_id'] }}"
        volume_size: 5
        volume_type: standard
        name: mysql_data_vol
        device_name: /dev/xvdd
      register: ec2_vol
    - debug:
        msg: "{{ ec2_vol }}"

- name: Define partition
  hosts: ec2hosts
  gather_facts: false
  vars_files:
    - vars/asg_vars.yml
    - vars/aws_template_vars.yml
    - vars/server_setup_vars.yml
  tasks:
    - name: Wait for SSH
      ansible.builtin.wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      connection: local

    - name: create partition
      become: true
      parted:
        device: /dev/xvdd
        number: 1
        flags: [ lvm ]
        state: present

    - name: Create volume group
      become: true
      community.general.lvg:
        vg: mysql.data
        pvs: /dev/xvdd1
        pvresize: true
        state: active

    - name: Create volume
      become: true
      community.general.lvol:
        vg: mysql.data
        lv: lv01
        size: +100%FREE
      register: lv
    - debug:
        msg: "{{ lv }}"

    - name: Mount the volume
      become: true
      shell: |
        mkfs.xfs /dev/mysql.data/lv01
        mkdir /data0
        mount /dev/mysql.data/lv01 /data0
        echo "/dev/mysql.data/lv01  /data0  xfs  auto  0 0" >> /etc/fstab
        mkdir /data0/mysql
        chown mysql:mysql /data0/mysql
        chmod 0700 /data0/mysql

#
