---
- hosts: ec2hosts
  vars_files:
    - vars/compose_vars.yml
  gather_facts: false
  become: true

  tasks:

    - name: Wait for ssh
      ansible.builtin.wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      connection: local

    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: yes

    - name: Docker is present
      ansible.builtin.package:
        name: docker
        state: present

    - name: Docker.io is present
      ansible.builtin.package:
        name: docker.io
        state: present

    - name: Docker-compose is present
      ansible.builtin.package:
        name: docker-compose
        state: present

    - name: Python-Docker is present
      ansible.builtin.package:
        name: python3-docker
        state: present

    - name: Group docker exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: create web directory
      file:
        path: "{{ www_dir }}"
        owner: www-data
        state: directory
        mode: 0775

    - name: Create www directory
      file:
        path: "{{ apache_dir }}"
        state: directory
        mode: 0775

    - name: Create mysql directory
      file:
        path: "{{ mysql_dir }}"
        state: directory
        mode: 0775

    - name: Copy initial compose
      ansible.builtin.copy:
        src: "{{ src_dir }}/docker-compose.yml"
        dest: "{{ apache_dir }}/docker-compose.yml"

    - name: Run docker compose
      community.docker.docker_compose:
        project_src: /var/docker/web/apache
        files:
          - docker-compose.yml
      register: output

    - name: Show initial create results
      ansible.builtin.debug:
        var: output

    - name: Copy docker build
      ansible.builtin.copy:
        src: "{{ src_dir }}/Dockerfile"
        dest: "{{ apache_dir }}/Dockerfile"

    - name: Copy index.php
      ansible.builtin.copy:
        src: "{{ src_dir }}/index.php"
        dest: "{{ www_dir }}/index.php"
        mode: 0644

    - name: Run docker compose
      community.docker.docker_compose:
        project_src: "{{ apache_dir }}"
        files: 
          - docker-compose.yml
      register: output

    - name: Show update results
      ansible.builtin.debug:
        var: output

    - name: Verify that the web service is running
      ansible.builtin.assert:
        that:
          - "output.services.web.smm_apache2.state.running"
